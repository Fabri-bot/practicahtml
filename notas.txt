GUI = Graphical User Interface . Provee una forma visual de ejecutar comandos consola.

GIT = Sistema de Versionado

GIT-HUB = Servicios, que implementa GIT

Repositorios = Conjunto de archivos
Local/Remoto

Comandos comunes de Git

Repo/Sync
GIT Clone = Clonar("copiar")  DESDE remoto HACIA local. Normalmente se hace al comienzo (trabaja nuevo)

GIT Pull = TRAER cambios DESDE remoto HACIA local (cuando ya tengo el repo local)
GIT Push = ENVIAR nuevos cambios DESDE local HACIA remoto


Repo Local
GIT Commit = Marcar "un punto" en los cambios. Minimo uno por dia, si pueden ser mas, mejor.
GIT Add
GIT Delete
GIT Stage

GIT Merge



-------------


Workflow:

Trabajar:
	1 Crear nuevos archivos
	2 Modificar codigo (archivos) existentes
	3 Eliminar archivo (no estan comun)

Comandos GIT

	1 <- "Add" al repo, para qeu comience el seguimiento de GIT
		Si no esta "Added" a GIT, no le hace seguimiento y no podes hacer "Commit" de esos cambios/archivos"
	2 <- "Commits" cada tanto, para hacer sgeuimiento de cambios mas prolijo.

Despues de el/los commits, tenes que hacer SYNC

Para hacer una Sync correcta, -> primero PULL y dsp PUSH <-

--------------

4/7/21

HTML es el archivo que va a entregarse al navegador, va a "renderizar" según el código que hayamos declarado/guardado en el archivo html. Una vez que el navegador lee y "renderiza" el codigo, inicializa un "motor en tiempo real" que interpreata lenguaje javascript. Este motor puede cambiar el codigo HTML original, pero solo temporalmente. Si el usuario recarga la página se perderan los cambios que haya hecho javascript y volverán a aparecer tal cual lo declarado en el HTML original.

Nuevos conceptos:
"Renderiza" = Accion de "dibujo" de elementos en pantalla a partir de lo declarado en el código html.
"Nodos" = Son elementos de un archivo XML que tienen una declaracion indicando donde comienzan y donde terminan. Siempre que se abre un nodo debe de cerrarse ANTES de que termine/fin de archivo, sino tendremos un error de parseo.

"Nodo" es sinonimo de etiqueta

Depuracion: Es el proceso de inspeccionar/investigar el codigo para entender como funciona o para hacer corecciones en el mismo.

Depuracion es sinonimo de "Debug/debugging"

Runtime = tiempo de ejecucion

Inspector: Una herramienta que sirve para examinar los elementos declarados en las lineas del código respecto a su posición y aspectos visuales como color, tamaño, posición etc...

10/7/21

--------- > Importante: case-sensitive = sensible a las mayusculas <----------------------
No es lo mismo:
let Fruta = "naranja"
let fruta = "mandarina"

Para ayudarnos con el case se crearon convenciones de escritura de codigo = Acuerdo de como escribir.

Convenciones de escritura: CamelCase, Pascal

sin convencion: nombredevariable (no hacer esto)
Camel: nombreDeVariable
Pascal: NombreDeVariable
Otras: nombre_var

Siglas usar Pascal: HTML (HiperTextMetadataLanguage)
Siglas y nombres usar Camel+Pascal: importeIVA
IVA usar Pascal (Impuesto Valor Agregado)

NaN = Not a Number (no es un numero)

var input; //Declaracion de variable, sin asignar valor (aun)
var input2 = "texto"; //Declaracion de variable, asigno una cadena (string)

if(input === undefined)
{
console.log("input no tiene valor");
}

if(input2 === undefined)
{
console.log("input2 no tiene valor");
}

Ámbito de declaracion variables
LET: Pueden tener el mismo nombre, en distintos ambitos (contextos) con diferentes valores.
VAR: Se declara una sola vez, para la aplicacion (cualquier contexto)
if (true) {
  var x = 5; //cuando termina la ejecucion del bloque, sigue existiendo (el valor y el nombre)
  let y = 5; //cuando se termina el bloque, se pierde (se destruye, deja de existir)
}
console.log(x);  // x es 5
console.log(y); // ReferenceError: y no está definida

null. Una palabra clave especial que denota un valor nulo. (Dado que JavaScript distingue entre mayúsculas y minúsculas, null no es lo mismo que Null, NULL o cualquier otra variante).
undefined. Una propiedad de alto nivel cuyo valor no está definido.

parse = "parsear" una accion de convertir un valor a otro, correctamente.
